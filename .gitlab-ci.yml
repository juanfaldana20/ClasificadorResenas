stages:
  - test
  - build
  - deploy

# -------------------------------
# Stage 1: Tests
# -------------------------------
backend-tests:
  stage: test
  image: python:3.10-slim
  script:
    - apt-get update && apt-get install -y build-essential git curl
    - pip install uv
    - echo "üìÇ Contenido del repo clonado:"
    - ls -R $CI_PROJECT_DIR
    - test -f $CI_PROJECT_DIR/backend/pyproject.toml || (echo "‚ùå backend pyproject.toml no encontrado" && exit 1)
    - cd $CI_PROJECT_DIR/backend
    - uv pip compile pyproject.toml -o requirements.txt
    - uv pip install --system -r requirements.txt --no-cache-dir
    - pip install pytest
    - echo "‚ñ∂Ô∏è Ejecutando tests de backend"
    - pytest ML/codigos_test.py -v

# -------------------------------
# Stage 2: Build + Push Backend
# -------------------------------
build-backend:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - echo "üîë Iniciando sesi√≥n en Azure ACR"
    - echo $AZURE_ACR_PASSWORD | docker login aplicacionstreamlit.azurecr.io -u $AZURE_ACR_USERNAME --password-stdin
    - echo "üê≥ Construyendo imagen backend..."
    - docker build -t aplicacionstreamlit.azurecr.io/reviews-backend:latest ./backend
    - echo "‚¨ÜÔ∏è Pusheando imagen backend al ACR..."
    - docker push aplicacionstreamlit.azurecr.io/reviews-backend:latest
  only:
    - main
    - develop

# -------------------------------
# Stage 3: Build + Push + Deploy Frontend
# -------------------------------
build-deploy-frontend:
  stage: deploy
  image: mcr.microsoft.com/azure-cli:2.61.0   # Imagen con Azure CLI
  services:
    - name: docker:24.0.5-dind
      alias: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache docker-cli
  script:
    - echo "üîë Login en Azure con Service Principal"
    - az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
    - az account set --subscription $AZURE_SUBSCRIPTION_ID

    - echo "üîë Login en Azure Container Registry"
    - echo $AZURE_ACR_PASSWORD | docker login $AZURE_ACR_SERVER -u $AZURE_ACR_USERNAME --password-stdin

    - echo "üê≥ Construyendo imagen frontend..."
    - docker build -t $AZURE_ACR_SERVER/frontend:latest ./frontend

    - echo "‚¨ÜÔ∏è Pusheando imagen frontend al ACR..."
    - docker push $AZURE_ACR_SERVER/frontend:latest

    - echo "üöÄ Desplegando nueva imagen frontend en Azure Container Apps"
    - az containerapp update \
        --name frontend-app \
        --resource-group $AZ_RESOURCE_GROUP \
        --image $AZURE_ACR_SERVER/frontend:latest
  only:
    - main
    - develop

