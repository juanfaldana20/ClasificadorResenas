stages:
  - test

run_tests:
  stage: test
  image: python:3.10-slim   # igual que el Dockerfile
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends build-essential git curl
    - pip install uv
  script:
    - cd backend/ML
    # Generar requirements desde pyproject.toml (como en tu Dockerfile)
    - uv pip compile pyproject.toml -o requirements.txt
    - uv pip install --system -r requirements.txt --no-cache-dir
    # Instalar torch CPU (igual que en Dockerfile)
    - pip install --no-cache-dir torch==2.6.0 --index-url https://download.pytorch.org/whl/cpu
    # Instalar pytest si no est√° en pyproject.toml
    - pip install pytest
    # Correr tests
    - pytest codigos_test.py
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
